@model GRP.AppWeb.Models.Producto

@{
    ViewBag.Title = "Create";
    ViewBag.Items = ViewContext.ViewBag.Items;
}

<script>
    function calcular() {
        var sumaCosto = 0;
        var sumaGrasas = 0;
        var sumaCal = 0;
        var sumaProt = 0;
        var sumaCarb = 0;
        var sumaRend = 0;
        var porciones = $('#txtPorciones').val();
        var utilidad = $('#txtUtilidad').val();
        if (isNaN(porciones) || porciones == 0) {
            porciones = 1;
        }

        $('#tblIngredientes').each(function () {
            $('tr').each(function () {
                $(this).find('#tdImporte').each(function () {
                    sumaCosto += parseFloat($(this).text());
                });
                $(this).find('#tdGrasa').each(function () {
                    sumaGrasas += parseFloat($(this).text());
                });

                $(this).find('#tdCaloria').each(function () {
                    sumaCal += parseFloat($(this).text());
                });

                $(this).find('#tdProteina').each(function () {
                    sumaProt += parseFloat($(this).text());
                });

                $(this).find('#tdCarbohidrato').each(function () {
                    sumaCarb += parseFloat($(this).text());
                });

                $(this).find('#tdRendimiento').each(function () {
                    sumaRend += parseFloat($(this).text());
                });
            });
        });
        var precioVenta = (sumaCosto / (utilidad / 100)).toFixed(2);
        $('#txtCosto').val(sumaCosto.toFixed(2));
        $('#txtCostoUni').val((sumaCosto / porciones).toFixed(2));
        $('#txtPrecio').val(precioVenta);
        $('#txtGrasas').val(sumaGrasas);
        $('#txtCalorias').val(sumaCal);
        $('#txtCarbo').val(sumaCarb);
        $('#txtProt').val(sumaProt);
        $('#txtRendimiento').val(sumaRend);
    }
</script>
<h2>Nuevo Producto</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#recipe" aria-controls="home" role="tab" data-toggle="tab">Receta</a></li>
                <li role="presentation"><a href="#directions" aria-controls="profile" role="tab" data-toggle="tab">Preparaci&oacute;n</a></li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="recipe">
                    <div class="row">
                        <!-- left column -->
                        <div class="col-sm-7">
                            <p class="lead">Datos del producto</p>
                            <div class="form-group">
                                <label for="nombre" class="col-sm-3 control-label">Tipo:</label>
                                <div class="col-sm-9">
                                    @Html.DropDownListFor(m => m.Tipo,
                    (IEnumerable<SelectListItem>)ViewBag.Clasificacion, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="nombre" class="col-sm-3 control-label">Nombre:</label>
                                <div class="col-sm-9">
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Porciones" class="col-sm-3 control-label">Porciones:</label>
                                <div class="col-sm-3">
                                    @Html.EditorFor(model => model.Porciones, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtPorciones" } })
                                    @Html.ValidationMessageFor(model => model.Porciones, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Redimiento" class="col-sm-3 control-label">Rendimiento:</label>
                                <div class="col-sm-3">
                                    @Html.EditorFor(model => model.Rendimiento, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtRendimiento", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Rendimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <!-- right column -->
                        <div class="col-sm-3">
                            <p class="lead">Costeo</p>
                            <div class="form-group">
                                <label for="Costo" class="col-sm-6 control-label">Costo:</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtCosto", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Redimiento" class="col-sm-6 control-label">Costo Unit.:</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtCostoUni", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="UmbralCosto" class="col-sm-6 control-label">Utilidad:</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Utilidad, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtUtilidad", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Utilidad, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Precio" class="col-sm-6 control-label">Precio Vta.:</label>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtPrecio", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="col-sm-2">
                            <p class="lead">Inf. Nutric.</p>
                            <div class="form-group">
                                <label for="txtGrasas" class="col-sm-3 control-label">Gra.:</label>
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Grasas, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtGrasas", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Grasas, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="txtCalorias" class="col-sm-3 control-label">Cal.:</label>
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Calorias, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtCalorias", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Calorias, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="txtCarbo" class="col-sm-3 control-label">Carb.:</label>
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Carbohidratos, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtCarbo", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Carbohidratos, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="txtProt" class="col-sm-3 control-label">Pro.:</label>
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Proteinas, new { htmlAttributes = new { @class = "form-control text-right", @id = "txtProt", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Proteinas, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div id="target">
                            @{ Html.RenderAction("Index", "ProductItem", new { id = Model.Id }); }
                        </div>
                    </div>

                </div>
                <div role="tabpanel" class="tab-pane" id="directions">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Elaboracion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Elaboracion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Elaboracion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
                                }
<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
